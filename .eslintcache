[{"C:\\Users\\CodeLab\\Desktop\\project\\best_todo\\src\\index.js":"1","C:\\Users\\CodeLab\\Desktop\\project\\best_todo\\src\\reportWebVitals.js":"2","C:\\Users\\CodeLab\\Desktop\\project\\best_todo\\src\\App.js":"3","C:\\Users\\CodeLab\\Desktop\\project\\best_todo\\src\\components\\Post\\Post.js":"4","C:\\Users\\CodeLab\\Desktop\\project\\best_todo\\src\\components\\View\\View.js":"5","C:\\Users\\CodeLab\\Desktop\\project\\best_todo\\src\\base.js":"6","C:\\Users\\CodeLab\\Desktop\\project\\best_todo\\src\\Build2\\Start.js":"7","C:\\Users\\CodeLab\\Desktop\\project\\best_todo\\src\\Build2\\ViewStart.js":"8","C:\\Users\\CodeLab\\Desktop\\project\\best_todo\\src\\Build2\\EditData.js":"9","C:\\Users\\CodeLab\\Desktop\\project\\best_todo\\src\\NewWork\\StartScreen.js":"10","C:\\Users\\CodeLab\\Desktop\\project\\best_todo\\src\\NewWork\\InputScreen.js":"11","C:\\Users\\CodeLab\\Desktop\\project\\best_todo\\src\\NewWork\\EditingScreen.js":"12","C:\\Users\\CodeLab\\Desktop\\project\\best_todo\\src\\Timer\\Timer.js":"13","C:\\Users\\CodeLab\\Desktop\\project\\best_todo\\src\\Timer\\EnterLabel.js":"14","C:\\Users\\CodeLab\\Desktop\\project\\best_todo\\src\\Timer\\TimeManager.js":"15","C:\\Users\\CodeLab\\Desktop\\project\\best_todo\\src\\Project\\HomeScreen.js":"16","C:\\Users\\CodeLab\\Desktop\\project\\best_todo\\src\\Project\\ViewScreenPage.js":"17","C:\\Users\\CodeLab\\Desktop\\project\\best_todo\\src\\Project\\EditingScreen.js":"18","C:\\Users\\CodeLab\\Desktop\\project\\best_todo\\src\\TimerProject\\ViewScreenPage.js":"19","C:\\Users\\CodeLab\\Desktop\\project\\best_todo\\src\\TimerProject\\ProjectManager.js":"20"},{"size":500,"mtime":499162500000,"results":"21","hashOfConfig":"22"},{"size":362,"mtime":499162500000,"results":"23","hashOfConfig":"22"},{"size":633,"mtime":1609847473828,"results":"24","hashOfConfig":"22"},{"size":3266,"mtime":1609789460901,"results":"25","hashOfConfig":"22"},{"size":2651,"mtime":1609753575075,"results":"26","hashOfConfig":"22"},{"size":483,"mtime":1609702795617,"results":"27","hashOfConfig":"22"},{"size":2474,"mtime":1609788556503,"results":"28","hashOfConfig":"22"},{"size":2184,"mtime":1609788802488,"results":"29","hashOfConfig":"22"},{"size":2314,"mtime":1609789387106,"results":"30","hashOfConfig":"22"},{"size":2549,"mtime":1609797473955,"results":"31","hashOfConfig":"22"},{"size":2910,"mtime":1609797475574,"results":"32","hashOfConfig":"22"},{"size":3885,"mtime":1609797476771,"results":"33","hashOfConfig":"22"},{"size":2754,"mtime":1609838898536,"results":"34","hashOfConfig":"22"},{"size":136,"mtime":1609836970583,"results":"35","hashOfConfig":"22"},{"size":2323,"mtime":1609838866061,"results":"36","hashOfConfig":"22"},{"size":2144,"mtime":1609841814473,"results":"37","hashOfConfig":"22"},{"size":3374,"mtime":1609847217458,"results":"38","hashOfConfig":"22"},{"size":3110,"mtime":1609847138691,"results":"39","hashOfConfig":"22"},{"size":2313,"mtime":1609849918544,"results":"40","hashOfConfig":"22"},{"size":2159,"mtime":1609850214818,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"1rw6epu",{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"49","messages":"50","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"44"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"44"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"44"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"44"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"44"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"44"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"44"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"44"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"44"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"44"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"44"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"88","messages":"89","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"90","messages":"91","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\CodeLab\\Desktop\\project\\best_todo\\src\\index.js",[],["94","95"],"C:\\Users\\CodeLab\\Desktop\\project\\best_todo\\src\\reportWebVitals.js",[],"C:\\Users\\CodeLab\\Desktop\\project\\best_todo\\src\\App.js",["96","97","98","99","100","101","102","103","104"],"C:\\Users\\CodeLab\\Desktop\\project\\best_todo\\src\\components\\Post\\Post.js",["105","106","107","108","109"],"import React, { useState, useEffect } from \"react\";\r\nimport \"./Post.css\";\r\nimport { db } from \"../../base\";\r\nimport firebase from \"firebase\";\r\nimport View from \"../View/View\";\r\nimport Modal from \"@material-ui/core/Modal\";\r\nimport SimpleModal from \"../View/View\";\r\n\r\nfunction Post(props) {\r\n  const [input, setInput] = useState(\"\");\r\n  const [open, setOpen] = useState(false);\r\n  const [task, setTask] = useState([\r\n    // \"Do laundary\",\r\n    // \"Go to Gym\",\r\n    // \"Do some Cooking\",\r\n  ]);\r\n\r\n  const getData = async () => {\r\n    await db.collection(\"todo\").onSnapshot((snapshot) => {\r\n      const i = [];\r\n      snapshot.forEach((doc) => {\r\n        i.push({ ...doc.data(), id: doc.id });\r\n      });\r\n      setTask(i);\r\n    });\r\n  };\r\n\r\n  const PostInput = async () => {\r\n    // setTask([...task, input]);\r\n    // console.log(\"am i added?\");\r\n\r\n    await db.collection(\"todo\").doc().set({\r\n      task: input,\r\n      time: firebase.firestore.FieldValue.serverTimestamp(),\r\n    });\r\n\r\n    setInput(\"\");\r\n  };\r\n\r\n  const deleteEntry = async (id) => {\r\n    if (window.confirm(\"Are you sure\")) {\r\n      await db.collection(\"todo\").doc(id).delete();\r\n    }\r\n    // console.log(\"Hello\");\r\n  };\r\n\r\n  const updateEntry = async (id) => {\r\n    const i = prompt();\r\n    await db.collection(\"todo\").doc(id).set(\r\n      {\r\n        task: i,\r\n      },\r\n      { merge: true }\r\n    );\r\n    console.log(id);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getData();\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"post\">\r\n        <form>\r\n          <div className=\"post__input\">\r\n            <input\r\n              placeholder=\"enter a tast to do\"\r\n              value={input}\r\n              onChange={(e) => {\r\n                setInput(e.target.value);\r\n              }}\r\n            />\r\n          </div>\r\n          <button\r\n            type=\"submit\"\r\n            onClick={(e) => {\r\n              e.preventDefault();\r\n              PostInput();\r\n              console.log(task);\r\n            }}\r\n          >\r\n            Submit\r\n          </button>\r\n        </form>\r\n\r\n        {task.map(({ task, id, time }) => (\r\n          <div key={id}>\r\n            <center className=\"view\">\r\n              <div className=\"view1\">\r\n                {\" \"}\r\n                <div className=\"view2\">üï•</div>\r\n                <div> {task}</div>\r\n              </div>\r\n              <div className=\"view1\">\r\n                <div className=\"view2\">\r\n                  {\" \"}\r\n                  <div\r\n                    style={{ cursor: \"pointer\" }}\r\n                    onClick={() => {\r\n                      // updateEntry(id);\r\n                      // console.log(id);\r\n                    }}\r\n                  >\r\n                    <SimpleModal task={task} setTask={setTask} id={id} />\r\n                  </div>\r\n                </div>\r\n\r\n                <div\r\n                  className=\"delete\"\r\n                  onClick={(e) => {\r\n                    deleteEntry(id);\r\n                    console.log(id);\r\n                  }}\r\n                >\r\n                  {\" \"}\r\n                  ‚ùå\r\n                </div>\r\n              </div>\r\n            </center>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Post;\r\n\r\n// <View task={task} setTask={setTask} />\r\n","C:\\Users\\CodeLab\\Desktop\\project\\best_todo\\src\\components\\View\\View.js",["110","111","112"],"import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Modal from \"@material-ui/core/Modal\";\r\nimport { db } from \"../../base\";\r\nimport firebase from \"firebase\";\r\n\r\nfunction rand() {\r\n  return Math.round(Math.random() * 20) - 10;\r\n}\r\n\r\nfunction getModalStyle() {\r\n  const top = 50 + rand();\r\n  const left = 50 + rand();\r\n\r\n  return {\r\n    top: `${top}%`,\r\n    left: `${left}%`,\r\n    transform: `translate(-${top}%, -${left}%)`,\r\n  };\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    position: \"absolute\",\r\n    width: 400,\r\n    backgroundColor: theme.palette.background.paper,\r\n    border: \"2px solid #000\",\r\n    boxShadow: theme.shadows[5],\r\n    padding: theme.spacing(2, 4, 3),\r\n  },\r\n}));\r\n\r\nexport default function SimpleModal({ task, id }) {\r\n  const [input, setInput] = React.useState(task);\r\n  const [tasks, setTasks] = React.useState([]);\r\n  console.log(id);\r\n  const updateEntry = async (task, id) => {\r\n    await db.collection(\"todo\").doc(id).set(\r\n      {\r\n        task: input,\r\n        time: firebase.firestore.FieldValue.serverTimestamp(),\r\n      },\r\n      { merge: true }\r\n    );\r\n    setOpen(false);\r\n    console.log(task);\r\n    console.log(id);\r\n  };\r\n\r\n  const delEntry = async (id) => {\r\n    await db.collection(\"todo\").doc(id).delete();\r\n    setOpen(false);\r\n    console.log(\"got it\");\r\n  };\r\n\r\n  const classes = useStyles();\r\n  // getModalStyle is not a pure function, we roll the style only on the first render\r\n  const [modalStyle] = React.useState(getModalStyle);\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const body = (\r\n    <div style={modalStyle} className={classes.paper}>\r\n      <h2 id=\"simple-modal-title\">Edit Task</h2>\r\n      <p id=\"simple-modal-description\">\r\n        <input\r\n          placeholder={task.task}\r\n          value={input}\r\n          onChange={(e) => {\r\n            setInput(e.target.value);\r\n          }}\r\n        />\r\n        <button\r\n          onClick={\r\n            () => {\r\n              updateEntry(task, id);\r\n            }\r\n            // delEntry\r\n          }\r\n        >\r\n          Save\r\n        </button>\r\n      </p>\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <div>\r\n      <div type=\"button\" onClick={handleOpen} style={{ cursor: \"pointer\" }}>\r\n        Edit\r\n      </div>\r\n      <Modal\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"simple-modal-title\"\r\n        aria-describedby=\"simple-modal-description\"\r\n      >\r\n        {body}\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\n// <SimpleModal />\r\n","C:\\Users\\CodeLab\\Desktop\\project\\best_todo\\src\\base.js",[],"C:\\Users\\CodeLab\\Desktop\\project\\best_todo\\src\\Build2\\Start.js",["113"],"import React, { useState, useEffect } from \"react\";\r\nimport { db } from \"../base\";\r\nimport ViewStart from \"./ViewStart\";\r\nimport firebase from \"firebase\";\r\n\r\nfunction Start(props) {\r\n  const [input, setInput] = useState(\"\");\r\n\r\n  const postEntry = async () => {\r\n    await db.collection(\"newTask\").doc().set({\r\n      task: input,\r\n      time: firebase.firestore.FieldValue.serverTimestamp(),\r\n      timeNow: Date.now(),\r\n    });\r\n    // console.log(input);\r\n    setInput(\"\");\r\n  };\r\n\r\n  return (\r\n    <div\r\n      style={{ display: \"flex\", flexWrap: \"wrap\", justifyContent: \"center\" }}\r\n    >\r\n      <div style={{ display: \"flex\", flexDirection: \"column\" }}>\r\n        <center style={{ margin: \"50px 0\" }}> Start Now </center>\r\n        <center>\r\n          <form>\r\n            <div\r\n              style={{\r\n                width: \"500px\",\r\n                height: \"50px\",\r\n                border: \"1px solid lightblue\",\r\n                borderRadius: \"50px\",\r\n              }}\r\n            >\r\n              <input\r\n                style={{\r\n                  outlineWidth: \"0\",\r\n                  border: \"0\",\r\n                  width: \"90%\",\r\n                  height: \"90%\",\r\n                  backgroundColor: \"transparent\",\r\n                  fontSize: \"20px\",\r\n                  fontFamily: \"Poppins\",\r\n                }}\r\n                placeholder=\"Enter a Task\"\r\n                value={input}\r\n                onChange={(e) => {\r\n                  setInput(e.target.value);\r\n                }}\r\n              />\r\n              <button\r\n                style={{\r\n                  display: \"none\",\r\n                  outlineWidth: \"0\",\r\n                  textTransform: \"capitalize\",\r\n                  width: \"90%\",\r\n                  height: \"90%\",\r\n                  backgroundColor: \"lightblue\",\r\n                  fontSize: \"20px\",\r\n                  borderRadius: \"30px\",\r\n                  fontFamily: \"Poppins\",\r\n                  marginTop: \"20px\",\r\n                  // fontWeight: \"bold\",\r\n                }}\r\n                type=\"submit\"\r\n                onClick={(e) => {\r\n                  e.preventDefault();\r\n                  postEntry();\r\n                }}\r\n              >\r\n                submit\r\n              </button>\r\n            </div>\r\n          </form>{\" \"}\r\n        </center>{\" \"}\r\n        <center style={{ margin: \"150px 0\" }}>\r\n          <ViewStart />\r\n        </center>\r\n      </div>{\" \"}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Start;\r\n","C:\\Users\\CodeLab\\Desktop\\project\\best_todo\\src\\Build2\\ViewStart.js",["114","115","116"],"import React, { forwardRef } from \"react\";\r\nimport { db } from \"../base\";\r\nimport FlipMove from \"react-flip-move\";\r\nimport SimpleModal from \"./EditData\";\r\nimport TransitionsModal from \"./EditData\";\r\n\r\nconst ViewStart = (props) => {\r\n  // const [input, setInput] = React.useState(\"\");\r\n  const [task, setTask] = React.useState([\r\n    // \"Go to School\",\r\n    // \"Write some Code\",\r\n    // \"Try something new\",\r\n  ]);\r\n\r\n  const getData = async () => {\r\n    await db\r\n      .collection(\"newTask\")\r\n      .orderBy(\"time\", \"desc\")\r\n      .onSnapshot((snapshot) => {\r\n        const items = [];\r\n        snapshot.forEach((doc) => {\r\n          items.push({ ...doc.data(), id: doc.id });\r\n        });\r\n        setTask(items);\r\n      });\r\n  };\r\n\r\n  const deleteData = async (id) => {\r\n    if (window.confirm(\"Are you sure?\")) {\r\n      await db.collection(\"newTask\").doc(id).delete();\r\n    }\r\n  };\r\n\r\n  // console.log(task);\r\n  React.useEffect(() => {\r\n    getData();\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n        {task.map(({ task, id, time }) => (\r\n          <div key={id}>\r\n            <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\r\n              <div\r\n                style={{\r\n                  display: \"flex\",\r\n                  width: \"350px\",\r\n                  justifyContent: \"space-between\",\r\n                }}\r\n              >\r\n                <div>üï•</div>\r\n                <div>{task}</div>\r\n              </div>\r\n              <div\r\n                style={{\r\n                  display: \"flex\",\r\n                  width: \"50px\",\r\n                  justifyContent: \"space-between\",\r\n                }}\r\n              >\r\n                <div style={{ cursor: \"pointer\" }}>\r\n                  <TransitionsModal task={task} setTask={setTask} id={id} />\r\n                </div>\r\n                <div\r\n                  style={{ cursor: \"pointer\" }}\r\n                  onClick={() => {\r\n                    deleteData(id);\r\n                  }}\r\n                >\r\n                  ‚ùå\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ViewStart;\r\n","C:\\Users\\CodeLab\\Desktop\\project\\best_todo\\src\\Build2\\EditData.js",["117"],"import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Modal from \"@material-ui/core/Modal\";\r\nimport Backdrop from \"@material-ui/core/Backdrop\";\r\nimport Fade from \"@material-ui/core/Fade\";\r\nimport { db } from \"../base\";\r\nimport firebase from \"firebase\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  modal: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n  paper: {\r\n    backgroundColor: theme.palette.background.paper,\r\n    border: \"2px solid #000\",\r\n    boxShadow: theme.shadows[5],\r\n    padding: theme.spacing(2, 4, 3),\r\n  },\r\n}));\r\n\r\nexport default function TransitionsModal({ task, id }) {\r\n  // console.log(task);\r\n  const classes = useStyles();\r\n  const [open, setOpen] = React.useState(false);\r\n  const [input, setInput] = React.useState();\r\n\r\n  const handleOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const updateData = async (task, id) => {\r\n    await db.collection(\"newTask\").doc(id).update({\r\n      task: input,\r\n    });\r\n    console.log(id);\r\n    console.log(input);\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <button type=\"button\" onClick={handleOpen}>\r\n        Edit\r\n      </button>\r\n      <Modal\r\n        aria-labelledby=\"transition-modal-title\"\r\n        aria-describedby=\"transition-modal-description\"\r\n        className={classes.modal}\r\n        open={open}\r\n        onClose={handleClose}\r\n        closeAfterTransition\r\n        BackdropComponent={Backdrop}\r\n        BackdropProps={{\r\n          timeout: 500,\r\n        }}\r\n      >\r\n        <Fade in={open}>\r\n          <div className={classes.paper}>\r\n            <h2 id=\"transition-modal-title\">Edit Task</h2>\r\n            <p id=\"transition-modal-description\">\r\n              <input\r\n                value={input}\r\n                onChange={(e) => {\r\n                  setInput(e.target.value);\r\n                }}\r\n                placeholder=\"Enter a value\"\r\n              />\r\n              <button\r\n                onClick={(e) => {\r\n                  e.preventDefault();\r\n                  updateData(task, id);\r\n                }}\r\n              >\r\n                Save\r\n              </button>\r\n            </p>\r\n          </div>\r\n        </Fade>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\CodeLab\\Desktop\\project\\best_todo\\src\\NewWork\\StartScreen.js",["118","119"],"import React, { useState, forwardRef } from \"react\";\r\nimport InputScreen from \"./InputScreen\";\r\nimport { db } from \"../base\";\r\nimport firebase from \"firebase\";\r\n\r\nconst StartScreen = forwardRef((props, ref) => {\r\n  const [input, setInput] = useState(\"\");\r\n  const [done, setDone] = useState(false);\r\n\r\n  const enterData = async () => {\r\n    await db.collection(\"TaskInput\").doc().set({\r\n      task: input,\r\n      time: firebase.firestore.FieldValue.serverTimestamp(),\r\n      dateTime: Date.now(),\r\n      done: done,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div ref={ref} style={{ marginTop: \"50px\" }}>\r\n      <center>Start up screen</center>\r\n      <div style={{ marginTop: \"50px\" }}>\r\n        <form>\r\n          <div\r\n            style={{\r\n              width: \"600px\",\r\n              height: \"40px\",\r\n              border: \"1px solid lightblue\",\r\n              borderRadius: \"50px\",\r\n            }}\r\n          >\r\n            <input\r\n              style={{\r\n                width: \"90%\",\r\n                height: \"90%\",\r\n                border: \"none\",\r\n                outlineWidth: \"0\",\r\n                backgroundColor: \"transparent\",\r\n                marginLeft: \"20px\",\r\n                fontSize: \"15px\",\r\n                fontFamily: \"Poppins\",\r\n              }}\r\n              placeholder=\"Enter Your Task\"\r\n              value={input}\r\n              onChange={(e) => {\r\n                setInput(e.target.value);\r\n              }}\r\n            />\r\n          </div>\r\n          <div\r\n            style={{\r\n              width: \"600px\",\r\n              height: \"40px\",\r\n              // border: \"1px solid lightblue\",\r\n              // borderRadius: \"50px\",\r\n            }}\r\n          >\r\n            <center>\r\n              <button\r\n                type=\"submit\"\r\n                style={{\r\n                  display: \"none\",\r\n                  backgroundColor: \"lightblue\",\r\n                  width: \"80%\",\r\n                  height: \"35px\",\r\n                  borderRadius: \"50px\",\r\n                  fontSize: \"15px\",\r\n                  marginTop: \"20px\",\r\n                  fontFamily: \"Poppins\",\r\n                  outlineWidth: \"0\",\r\n                }}\r\n                onClick={(e) => {\r\n                  e.preventDefault();\r\n                  enterData();\r\n                  console.log(input);\r\n                  setInput(\"\");\r\n                }}\r\n              >\r\n                Add a Task\r\n              </button>\r\n            </center>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n});\r\n\r\nexport default StartScreen;\r\n","C:\\Users\\CodeLab\\Desktop\\project\\best_todo\\src\\NewWork\\InputScreen.js",["120"],"import React, { useState, useEffect } from \"react\";\r\nimport { db } from \"../base\";\r\nimport firebase from \"firebase\";\r\nimport EditingScreen from \"./EditingScreen\";\r\nimport FlipMove from \"react-flip-move\";\r\n\r\nconst InputScreen = ({ input, setInput }) => {\r\n  const [todo, setTodo] = useState([]);\r\n  const [done, setDone] = useState(false);\r\n\r\n  const toggle = () => {\r\n    setDone(!done);\r\n  };\r\n\r\n  const updateState = async (id) => {\r\n    await db.collection(\"TaskInput\").doc(id).update({\r\n      done: done,\r\n    });\r\n  };\r\n\r\n  const findData = async () => {\r\n    await db\r\n      .collection(\"TaskInput\")\r\n      .orderBy(\"time\", \"desc\")\r\n      .onSnapshot((snapshot) => {\r\n        const item = [];\r\n        snapshot.forEach((doc) => {\r\n          item.push({ ...doc.data(), id: doc.id });\r\n        });\r\n        setTodo(item);\r\n      });\r\n  };\r\n\r\n  const deleteData = async (id) => {\r\n    if (window.confirm(\"Are you sure?\")) {\r\n      return await db.collection(\"TaskInput\").doc(id).delete();\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    findData();\r\n  }, []);\r\n  return (\r\n    <div style={{ marginTop: \"50px\" }}>\r\n      <div>\r\n        <center>Tasks Display Entries</center>\r\n      </div>\r\n      <div>\r\n        <FlipMove>\r\n          {todo.map(({ task, id, done, time }) => (\r\n            <div\r\n              key={id}\r\n              style={{\r\n                display: \"flex\",\r\n                justifyContent: \"space-between\",\r\n              }}\r\n            >\r\n              <div\r\n                style={{\r\n                  display: \"flex\",\r\n                }}\r\n              >\r\n                <div\r\n                  style={{\r\n                    marginRight: \"15px\",\r\n                    cursor: \"pointer\",\r\n                  }}\r\n                  onClick={() => {\r\n                    toggle(id);\r\n                    updateState(id);\r\n                    console.log(id);\r\n                    console.log(done);\r\n                  }}\r\n                >\r\n                  {\" \"}\r\n                  {done ? \" üëç \" : \" üëé \"}{\" \"}\r\n                </div>\r\n                <div style={{}}>{task} </div>\r\n              </div>\r\n              <div\r\n                style={{\r\n                  display: \"flex\",\r\n                }}\r\n              >\r\n                <div\r\n                  style={{\r\n                    marginRight: \"15px\",\r\n                  }}\r\n                >\r\n                  {\" \"}\r\n                  <EditingScreen task={task} id={id} />{\" \"}\r\n                </div>\r\n                <div\r\n                  style={{\r\n                    cursor: \"pointer\",\r\n                  }}\r\n                  onClick={() => {\r\n                    deleteData(id);\r\n                  }}\r\n                >\r\n                  ‚ùå{\" \"}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          ))}\r\n        </FlipMove>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default InputScreen;\r\n","C:\\Users\\CodeLab\\Desktop\\project\\best_todo\\src\\NewWork\\EditingScreen.js",[],"C:\\Users\\CodeLab\\Desktop\\project\\best_todo\\src\\Timer\\Timer.js",["121"],"import React, { useState, useEffect } from \"react\";\r\nimport EnterLabel from \"./EnterLabel\";\r\n\r\nfunction Timer(props) {\r\n  const [input, setInput] = useState(\"\");\r\n  const [isCounting, setIsCounting] = useState(false);\r\n  const [shouldCount, setShouldCount] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const inputInt = parseInt(input);\r\n    if (isCounting && input > 0) {\r\n      setTimeout(() => {\r\n        setInput(inputInt - 1);\r\n      }, 1000);\r\n    } else {\r\n      if (shouldCount) {\r\n        alert(\"Your set Task time is OVER!\");\r\n        setShouldCount(false);\r\n        setInput(\"\");\r\n      }\r\n      setIsCounting(false);\r\n    }\r\n  }, [input, isCounting]);\r\n  return (\r\n    <div style={{ marginTop: \"10px\", marginBottom: \"10px\" }}>\r\n      <EnterLabel />\r\n      <div\r\n        style={{\r\n          height: \"70px\",\r\n          display: \"flex\",\r\n          alignItems: \"center\",\r\n          justifyContent: \"center\",\r\n          // backgroundColor: \"lightblue\",\r\n        }}\r\n      >\r\n        <div style={{ marginRight: \"20px\" }}>{props.name}</div>\r\n        <div\r\n          style={{\r\n            marginTop: \"0px\",\r\n            width: \"300px\",\r\n            height: \"40px\",\r\n            border: \"1px solid lightblue\",\r\n            borderRadius: \"50px\",\r\n          }}\r\n        >\r\n          <input\r\n            type=\"Number\"\r\n            disabled={isCounting}\r\n            style={{\r\n              width: \"90%\",\r\n              height: \"90%\",\r\n              border: \"none\",\r\n              outlineWidth: \"0\",\r\n              backgroundColor: \"transparent\",\r\n              marginLeft: \"20px\",\r\n              fontSize: \"15px\",\r\n              fontFamily: \"Poppins\",\r\n            }}\r\n            placeholder=\"Enter Your Task Schedule Time\"\r\n            value={input}\r\n            onChange={(e) => {\r\n              setInput(e.target.value);\r\n            }}\r\n          />\r\n        </div>\r\n\r\n        <div\r\n          style={{\r\n            width: \"200px\",\r\n            height: \"40px\",\r\n          }}\r\n        >\r\n          <button\r\n            // type=\"submit\"\r\n            disable={isCounting}\r\n            style={{\r\n              // display: \"none\",\r\n\r\n              backgroundColor: \"lightblue\",\r\n              width: \"80%\",\r\n              height: \"35px\",\r\n              borderRadius: \"50px\",\r\n              fontSize: \"15px\",\r\n              marginTop: \"0px\",\r\n              fontFamily: \"Poppins\",\r\n              outlineWidth: \"0\",\r\n            }}\r\n            onClick={(e) => {\r\n              e.preventDefault();\r\n              setIsCounting(true);\r\n              setShouldCount(true);\r\n              console.log(input);\r\n            }}\r\n          >\r\n            Start Time\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Timer;\r\n","C:\\Users\\CodeLab\\Desktop\\project\\best_todo\\src\\Timer\\EnterLabel.js",["122","123"],"import React, { useState, useEffect } from \"react\";\r\n\r\nfunction EnterLabel() {\r\n  return <div></div>;\r\n}\r\n\r\nexport default EnterLabel;\r\n","C:\\Users\\CodeLab\\Desktop\\project\\best_todo\\src\\Timer\\TimeManager.js",["124"],"import React from \"react\";\r\nimport EnterLabel from \"./EnterLabel\";\r\nimport Timer from \"./Timer\";\r\n\r\nfunction TimeManager() {\r\n  const [input, setInput] = React.useState(\"\");\r\n  const [taskTime, setTaskTime] = React.useState([]);\r\n\r\n  const onSubmit = () => {\r\n    setTaskTime([...taskTime, input]);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <center style={{ marginBottom: \"40px\" }}>This is the Timer Screen</center>\r\n      <div\r\n        style={{\r\n          height: \"60px\",\r\n          display: \"flex\",\r\n          justifyContent: \"center\",\r\n          alignItems: \"center\",\r\n        }}\r\n      >\r\n        <div\r\n          style={{\r\n            marginTop: \"0px\",\r\n            width: \"300px\",\r\n            height: \"40px\",\r\n            border: \"1px solid lightblue\",\r\n            borderRadius: \"50px\",\r\n          }}\r\n        >\r\n          <input\r\n            type=\"text\"\r\n            style={{\r\n              width: \"90%\",\r\n              height: \"90%\",\r\n              border: \"none\",\r\n              outlineWidth: \"0\",\r\n              backgroundColor: \"transparent\",\r\n              marginLeft: \"0px\",\r\n              fontSize: \"15px\",\r\n              fontFamily: \"Poppins\",\r\n            }}\r\n            placeholder=\"Enter Your Task Schedule Time\"\r\n            value={input}\r\n            onChange={(e) => {\r\n              setInput(e.target.value);\r\n            }}\r\n          />\r\n        </div>\r\n\r\n        <div\r\n          style={{\r\n            width: \"200px\",\r\n            height: \"40px\",\r\n          }}\r\n        >\r\n          <button\r\n            style={{\r\n              backgroundColor: \"lightblue\",\r\n              width: \"50%\",\r\n              height: \"35px\",\r\n              borderRadius: \"50px\",\r\n              fontSize: \"15px\",\r\n              marginTop: \"0px\",\r\n              fontFamily: \"Poppins\",\r\n              outlineWidth: \"0\",\r\n            }}\r\n            onClick={(e) => {\r\n              e.preventDefault();\r\n              onSubmit();\r\n              setInput(\"\");\r\n              console.log(input);\r\n            }}\r\n          >\r\n            Enter Task\r\n          </button>\r\n        </div>\r\n      </div>\r\n      <div>\r\n        {taskTime.map((task) => (\r\n          <Timer name={task} />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TimeManager;\r\n\r\n// <Timer name=\"Goto Studies\" />\r\n// <Timer name=\"Goto CodeLab\" />\r\n","C:\\Users\\CodeLab\\Desktop\\project\\best_todo\\src\\Project\\HomeScreen.js",["125","126"],"import React from \"react\";\r\nimport { db } from \"../base\";\r\nimport firebase from \"firebase\";\r\n\r\nconst ref = db.collection(\"bestTime\");\r\nfunction HomeScreen() {\r\n  const [input, setInput] = React.useState(\"\");\r\n  const [done, setDone] = React.useState(false);\r\n  const [counter, setCounter] = React.useState(\"\");\r\n\r\n  const toggle = () => {\r\n    setDone(!done);\r\n  };\r\n\r\n  const postData = async () => {\r\n    await ref.doc().set({\r\n      task: input,\r\n      done,\r\n      time: firebase.firestore.FieldValue.serverTimestamp(),\r\n      dateTime: Date.now(),\r\n      counter: counter,\r\n    });\r\n    setInput(\"\");\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <center>Home Screen</center>\r\n      <section>\r\n        <div\r\n          style={{\r\n            marginTop: \"50px\",\r\n            display: \"flex\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n            height: \"60px\",\r\n          }}\r\n        >\r\n          <div>Enter a Task</div>\r\n          <input\r\n            style={{\r\n              height: \"40px\",\r\n              width: \"400px\",\r\n              marginLeft: \"20px\",\r\n              border: \"1px solid lightblue\",\r\n              borderRadius: \"30px\",\r\n              outlineWidth: \"0\",\r\n              paddingLeft: \"20px\",\r\n              fontSize: \"15px\",\r\n              fontFamily: \"Poppins\",\r\n            }}\r\n            placeholder=\"Enter a Task\"\r\n            value={input}\r\n            onChange={(e) => {\r\n              setInput(e.target.value);\r\n            }}\r\n          />\r\n          <button\r\n            type=\"submit\"\r\n            style={{\r\n              height: \"50px \",\r\n              width: \"100px\",\r\n              marginLeft: \"20px\",\r\n              borderRadius: \"30px\",\r\n              outlineWidth: \"0\",\r\n              backgroundColor: \"lightblue\",\r\n              fontSize: \"15px\",\r\n              fontFamily: \"Poppins\",\r\n              color: \"white\",\r\n            }}\r\n            onClick={(e) => {\r\n              e.preventDefault();\r\n              postData();\r\n            }}\r\n          >\r\n            Enter\r\n          </button>\r\n        </div>\r\n      </section>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default HomeScreen;\r\n","C:\\Users\\CodeLab\\Desktop\\project\\best_todo\\src\\Project\\ViewScreenPage.js",["127","128","129","130"],"C:\\Users\\CodeLab\\Desktop\\project\\best_todo\\src\\Project\\EditingScreen.js",["131","132"],"C:\\Users\\CodeLab\\Desktop\\project\\best_todo\\src\\TimerProject\\ViewScreenPage.js",["133"],"C:\\Users\\CodeLab\\Desktop\\project\\best_todo\\src\\TimerProject\\ProjectManager.js",[],{"ruleId":"134","replacedBy":"135"},{"ruleId":"136","replacedBy":"137"},{"ruleId":"138","severity":1,"message":"139","line":2,"column":8,"nodeType":"140","messageId":"141","endLine":2,"endColumn":13},{"ruleId":"138","severity":1,"message":"142","line":3,"column":8,"nodeType":"140","messageId":"141","endLine":3,"endColumn":12},{"ruleId":"138","severity":1,"message":"143","line":4,"column":8,"nodeType":"140","messageId":"141","endLine":4,"endColumn":12},{"ruleId":"138","severity":1,"message":"144","line":5,"column":8,"nodeType":"140","messageId":"141","endLine":5,"endColumn":19},{"ruleId":"138","severity":1,"message":"145","line":6,"column":8,"nodeType":"140","messageId":"141","endLine":6,"endColumn":19},{"ruleId":"138","severity":1,"message":"146","line":7,"column":8,"nodeType":"140","messageId":"141","endLine":7,"endColumn":19},{"ruleId":"138","severity":1,"message":"147","line":8,"column":8,"nodeType":"140","messageId":"141","endLine":8,"endColumn":13},{"ruleId":"138","severity":1,"message":"148","line":10,"column":8,"nodeType":"140","messageId":"141","endLine":10,"endColumn":18},{"ruleId":"138","severity":1,"message":"149","line":11,"column":8,"nodeType":"140","messageId":"141","endLine":11,"endColumn":22},{"ruleId":"138","severity":1,"message":"143","line":5,"column":8,"nodeType":"140","messageId":"141","endLine":5,"endColumn":12},{"ruleId":"138","severity":1,"message":"150","line":6,"column":8,"nodeType":"140","messageId":"141","endLine":6,"endColumn":13},{"ruleId":"138","severity":1,"message":"151","line":11,"column":10,"nodeType":"140","messageId":"141","endLine":11,"endColumn":14},{"ruleId":"138","severity":1,"message":"152","line":11,"column":16,"nodeType":"140","messageId":"141","endLine":11,"endColumn":23},{"ruleId":"138","severity":1,"message":"153","line":47,"column":9,"nodeType":"140","messageId":"141","endLine":47,"endColumn":20},{"ruleId":"138","severity":1,"message":"154","line":35,"column":10,"nodeType":"140","messageId":"141","endLine":35,"endColumn":15},{"ruleId":"138","severity":1,"message":"155","line":35,"column":17,"nodeType":"140","messageId":"141","endLine":35,"endColumn":25},{"ruleId":"138","severity":1,"message":"156","line":50,"column":9,"nodeType":"140","messageId":"141","endLine":50,"endColumn":17},{"ruleId":"138","severity":1,"message":"157","line":1,"column":27,"nodeType":"140","messageId":"141","endLine":1,"endColumn":36},{"ruleId":"138","severity":1,"message":"158","line":1,"column":17,"nodeType":"140","messageId":"141","endLine":1,"endColumn":27},{"ruleId":"138","severity":1,"message":"159","line":3,"column":8,"nodeType":"140","messageId":"141","endLine":3,"endColumn":16},{"ruleId":"138","severity":1,"message":"160","line":4,"column":8,"nodeType":"140","messageId":"141","endLine":4,"endColumn":19},{"ruleId":"138","severity":1,"message":"161","line":7,"column":8,"nodeType":"140","messageId":"141","endLine":7,"endColumn":16},{"ruleId":"138","severity":1,"message":"144","line":2,"column":8,"nodeType":"140","messageId":"141","endLine":2,"endColumn":19},{"ruleId":"138","severity":1,"message":"162","line":8,"column":16,"nodeType":"140","messageId":"141","endLine":8,"endColumn":23},{"ruleId":"138","severity":1,"message":"161","line":3,"column":8,"nodeType":"140","messageId":"141","endLine":3,"endColumn":16},{"ruleId":"163","severity":1,"message":"164","line":23,"column":6,"nodeType":"165","endLine":23,"endColumn":25,"suggestions":"166"},{"ruleId":"138","severity":1,"message":"167","line":1,"column":17,"nodeType":"140","messageId":"141","endLine":1,"endColumn":25},{"ruleId":"138","severity":1,"message":"157","line":1,"column":27,"nodeType":"140","messageId":"141","endLine":1,"endColumn":36},{"ruleId":"138","severity":1,"message":"168","line":2,"column":8,"nodeType":"140","messageId":"141","endLine":2,"endColumn":18},{"ruleId":"138","severity":1,"message":"169","line":9,"column":19,"nodeType":"140","messageId":"141","endLine":9,"endColumn":29},{"ruleId":"138","severity":1,"message":"170","line":11,"column":9,"nodeType":"140","messageId":"141","endLine":11,"endColumn":15},{"ruleId":"138","severity":1,"message":"161","line":3,"column":8,"nodeType":"140","messageId":"141","endLine":3,"endColumn":16},{"ruleId":"138","severity":1,"message":"171","line":12,"column":10,"nodeType":"140","messageId":"141","endLine":12,"endColumn":21},{"ruleId":"138","severity":1,"message":"172","line":12,"column":23,"nodeType":"140","messageId":"141","endLine":12,"endColumn":37},{"ruleId":"138","severity":1,"message":"173","line":53,"column":9,"nodeType":"140","messageId":"141","endLine":53,"endColumn":21},{"ruleId":"138","severity":1,"message":"174","line":6,"column":10,"nodeType":"140","messageId":"141","endLine":6,"endColumn":21},{"ruleId":"138","severity":1,"message":"161","line":8,"column":8,"nodeType":"140","messageId":"141","endLine":8,"endColumn":16},{"ruleId":"163","severity":1,"message":"175","line":23,"column":6,"nodeType":"165","endLine":23,"endColumn":27,"suggestions":"176"},"no-native-reassign",["177"],"no-negated-in-lhs",["178"],"no-unused-vars","'Start' is defined but never used.","Identifier","unusedVar","'Post' is defined but never used.","'View' is defined but never used.","'InputScreen' is defined but never used.","'StartScreen' is defined but never used.","'TimeManager' is defined but never used.","'Timer' is defined but never used.","'HomeScreen' is defined but never used.","'ViewScreenPage' is defined but never used.","'Modal' is defined but never used.","'open' is assigned a value but never used.","'setOpen' is assigned a value but never used.","'updateEntry' is assigned a value but never used.","'tasks' is assigned a value but never used.","'setTasks' is assigned a value but never used.","'delEntry' is assigned a value but never used.","'useEffect' is defined but never used.","'forwardRef' is defined but never used.","'FlipMove' is defined but never used.","'SimpleModal' is defined but never used.","'firebase' is defined but never used.","'setDone' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'shouldCount'. Either include it or remove the dependency array.","ArrayExpression",["179"],"'useState' is defined but never used.","'EnterLabel' is defined but never used.","'setCounter' is assigned a value but never used.","'toggle' is assigned a value but never used.","'shouldAlert' is assigned a value but never used.","'setShouldAlert' is assigned a value but never used.","'startCounter' is assigned a value but never used.","'BorderRight' is defined but never used.","React Hook useEffect has a missing dependency: 'shouldAlert'. Either include it or remove the dependency array.",["180"],"no-global-assign","no-unsafe-negation",{"desc":"181","fix":"182"},{"desc":"183","fix":"184"},"Update the dependencies array to be: [input, isCounting, shouldCount]",{"range":"185","text":"186"},"Update the dependencies array to be: [counter, isCounting, shouldAlert]",{"range":"187","text":"188"},[643,662],"[input, isCounting, shouldCount]",[642,663],"[counter, isCounting, shouldAlert]"]